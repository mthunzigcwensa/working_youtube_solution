@using youtube.Application.Services.Implementation
@using youtube.Application.Services.Interfaces
@using youtube.Domain.Entities
@using System.Security.Claims
@model Video
@{
    ViewData["Title"] = "Watching";
      var claimsIdentity = (ClaimsIdentity)User.Identity;
    var SuserId = claimsIdentity.FindFirst(ClaimTypes.NameIdentifier)?.Value;
}
<link rel="stylesheet" href="~/css/watchvideo.css" asp-append-version="true" />
<div class="container">
    <div class="main-content">
        <div class="video-player-container">
            <video controls width=100%>
                <source src="@Model.VideoUrl" type="video/mp4">
                Your browser does not support the video tag.
            </video>
        </div>

        <div class="video-description">
            <h1>@Model.Title</h1>
            <div class="channel-info-wrapper">
                @if (SuserId == Model.UserId)
                {
                    <a href="@Url.Action("index", "Channel", new { id = Model.UserId })">
                        <div class="channel-details">
                            <img src="@(!string.IsNullOrEmpty(Model.ChannelData.ProfilePictureUrl) ? Model.ChannelData.ProfilePictureUrl : "https://cdn-icons-png.flaticon.com/512/847/847969.png")"
                                 alt="Channel Avatar"
                                 class="channel-avatar">
                            <div class="channel-text">
                                <span class="channel-name">@Model.ChannelData.Handle</span>
                                <span class="subscribers-count">0 subscribers</span>
                            </div>
                        </div>
                    </a>
                }
                else{
                <a href="@Url.Action("channelData", "Channel", new { id = Model.UserId })">
                <div class="channel-details">
                    <img src="@(!string.IsNullOrEmpty(Model.ChannelData.ProfilePictureUrl) ? Model.ChannelData.ProfilePictureUrl : "https://cdn-icons-png.flaticon.com/512/847/847969.png")"
                         alt="Channel Avatar"
                         class="channel-avatar">
                    <div class="channel-text">
                        <span class="channel-name">@Model.ChannelData.Handle</span>
                        <span class="subscribers-count">0 subscribers</span>
                    </div>
                </div>
                </a>
                }
                <button class="subscribe-btn">Subscribe</button>

                <div class="action-buttons">
                    <button><i class="bi bi-hand-thumbs-up"></i> 0</button>
                    <button><i class="bi bi-hand-thumbs-down"></i></button>
                    <button><i class="bi bi-share"></i> Share</button>
                    <button><i class="bi bi-three-dots"></i></button>
                </div>
            </div>

            <div class="description-box">
                <div class="views-info">
                    <span>@Model.viewCount views • @Model.TimeAgo</span>
                </div>
              
                <div class="video-description-text">
                    <p>@Model.ChannelData.Description</p>
                </div>
            </div>
        </div>

        <div class="comments-section">
           
            <div class="add-comment">
                <img src="https://cdn-icons-png.flaticon.com/512/847/847969.png"
                     alt="User Avatar"
                     class="user-avatar">
                @await Html.PartialAsync("_AddCommentPartial", new youtube.Domain.Entities.Comment { VideoId = Model.Id })
            </div>



            
            @await Component.InvokeAsync("Comments", new { videoId = Model.Id })

           
        </div>
    </div>
    @await Component.InvokeAsync("Videos")

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
                document.addEventListener('DOMContentLoaded', function () {
            // Fetch the logged-in user's data
            fetch('/Account/GetLoggedInUser')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const user = data.data;

                        // Update the profile picture in the add-comment section
                        const userAvatar = document.querySelector('.add-comment .user-avatar');
                        if (userAvatar && user.profilePic) {
                            userAvatar.src = user.profilePic; // Set the logged-in user's profile picture
                        }
                    } else {
                        console.error("Failed to fetch user data:", data.message);
                    }
                })
                .catch(error => {
                    console.error("Error fetching logged-in user data:", error);
                });
        });

    </script>
}